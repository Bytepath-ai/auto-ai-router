```diff
--- a/django/db/models/constraints.py
+++ b/django/db/models/constraints.py
@@ -23,6 +23,26 @@
         self.check = check
         super().__init__(name)
 
+    def _get_check_fields(self, expression):
+        if isinstance(expression, F):
+            yield expression.name
+        if hasattr(expression, 'get_source_expressions'):
+            for source in expression.get_source_expressions():
+                yield from self._get_check_fields(source)
+        if isinstance(expression, Q):
+            for child in expression.children:
+                if isinstance(child, Q):
+                    yield from self._get_check_fields(child)
+                else:
+                    lookup, value = child
+                    yield lookup.split('__', 1)[0]
+                    yield from self._get_check_fields(value)
+
+    def check(self, model, **kwargs):
+        errors = super().check(model, **kwargs)
+        field_names = set(self._get_check_fields(self.check))
+        errors.extend(model._check_local_fields(list(field_names)))
+        return errors
+
     def __repr__(self):
         return '<%s: check=%s name=%s>' % (
             self.__class__.__name__,
@@ -58,6 +78,11 @@
         self.condition = condition
         super().__init__(name)
 
+    def check(self, model, **kwargs):
+        errors = super().check(model, **kwargs)
+        errors.extend(model._check_local_fields(self.fields))
+        return errors
+
     def __repr__(self):
         return '<%s: fields=%s name=%s>' % (
             self.__class__.__name__,

```