```diff
--- a/django/db/backends/base/creation.py
+++ b/django/db/backends/base/creation.py
@@ -4,7 +4,7 @@
 from django.apps import apps
 from django.conf import settings
 from django.core import serializers
-from django.db import router
+from django.db import router, transaction
 from django.utils.six import StringIO
 from django.utils.six.moves import input
 
@@ -125,9 +125,28 @@
         Reloads the database state from a string generated by
         the serialize_db_to_string method.
         """
-        data = StringIO(data)
-        for obj in serializers.deserialize("json", data, using=self.connection.alias):
-            obj.save()
+        data = StringIO(data)
+        models = set()
+        objs_with_deferred_fields = []
+        with transaction.atomic(using=self.connection.alias):
+            with self.connection.constraint_checks_disabled():
+                for obj in serializers.deserialize('json', data, using=self.connection.alias):
+                    obj.save()
+                    models.add(obj.object.__class__)
+                    if obj.deferred_fields:
+                        objs_with_deferred_fields.append(obj)
+
+                for obj in objs_with_deferred_fields:
+                    obj.save_deferred_fields(using=self.connection.alias)
+
+            # Since we disabled constraint checks, we must manually check for
+            # any invalid keys that might have been added.
+            table_names = [model._meta.db_table for model in models]
+            try:
+                self.connection.check_constraints(table_names=table_names)
+            except Exception as e:
+                e.args = ('Problem restoring database state: %s' % e,)
+                raise
 
     def _get_database_display_str(self, verbosity, database_name):
         """

```