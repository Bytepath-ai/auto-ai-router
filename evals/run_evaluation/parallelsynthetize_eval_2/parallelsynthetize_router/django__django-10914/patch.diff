```diff
--- a/django/conf/global_settings.py
+++ b/django/conf/global_settings.py
@@ -304,9 +304,11 @@
 FILE_UPLOAD_MAX_MEMORY_SIZE = 2621440  # i.e. 2.5 MB
 
 # The numeric mode to set newly-uploaded files to. The value should be a mode
-# you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.
-FILE_UPLOAD_PERMISSIONS = None
+# you'd pass directly to os.chmod; see https://docs.python.org/3/library/os.html#files-and-directories.
+# The default of 0o644 gives read/write permissions to the owner and
+# read-only permissions to the group and others, avoiding inconsistencies
+# between files uploaded from memory and those written to temporary files.
+# Set this to None to retain the operating systemâ€™s default behavior.
+FILE_UPLOAD_PERMISSIONS = 0o644
 
 # The numeric mode to assign to newly-created directories, when uploading files.
 # The value should be a mode as you'd pass to os.chmod;
--- a/docs/releases/3.0.txt
+++ b/docs/releases/3.0.txt
@@ -6,6 +6,20 @@
 
 Backwards incompatible changes in 3.0
 ====================================
+
+:setting:`FILE_UPLOAD_PERMISSIONS` has a new default value
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+To avoid inconsistent behavior, the :setting:`FILE_UPLOAD_PERMISSIONS` setting
+now defaults to ``0o644``. Previously, when this setting was ``None``,
+uploaded files could have different permissions depending on their size: files
+that used the
+:class:`~django.core.files.uploadhandler.TemporaryFileUploadHandler`
+would have permissions of ``0o600`` on some platforms, while files that used
+the :class:`~django.core.files.uploadhandler.MemoryFileUploadHandler` would use
+the system's umask.
+
+To restore the previous behavior, set :setting:`FILE_UPLOAD_PERMISSIONS` to ``None``.
 
 ``django.contrib.gis``
 ----------------------
--- a/docs/ref/settings.txt
+++ b/docs/ref/settings.txt
@@ -1523,16 +1523,19 @@
 FILE_UPLOAD_PERMISSIONS
 -----------------------
 
-Default: ``None``
+.. versionchanged:: 3.0
+    The default was changed from ``None`` to ``0o644``.
+
+Default: ``0o644``
 
 The numeric mode to set newly-uploaded files to. For more information about
 what these modes mean, see the documentation for :func:`os.chmod`.
 
-If this isn't given or is ``None``, you'll get operating-system
-dependent behavior. On most platforms, temporary files will have a mode
-of ``0o600``, and files saved from memory will be saved using the
-system's standard umask.
+If this is set to ``None``, you'll get operating-system dependent behavior. On
+most platforms, files uploaded to a temporary file on disk will have a mode of
+``0o600``, while files uploaded to memory will be saved using the system's
+standard umask. Explicitly setting this value avoids this inconsistent behavior
+based on upload size.
 
 For security reasons, these permissions aren't applied to the temporary files
 that are stored in :setting:`FILE_UPLOAD_TEMP_DIR`.
--- a/docs/topics/deployment/checklist.txt
+++ b/docs/topics/deployment/checklist.txt
@@ -103,13 +103,15 @@
 See :ref:`the documentation for the File object's <file-object>` ``save()``
 method for more information.
 
-:setting:`FILE_UPLOAD_PERMISSIONS`
-----------------------------------
+:setting:`FILE_UPLOAD_PERMISSIONS` and :setting:`FILE_UPLOAD_DIRECTORY_PERMISSIONS`
+----------------------------------------------------------------------------------
 
-Some web servers (e.g. Apache) strip the ``Authorization`` header from incoming
-requests by default. Without this header, Django can't authenticate the user.
-To work around this, you can configure your web server to pass along the
-header, or use ``Mod_WSGI`` :ref:`wsgi-auth-with-mod-wsgi`.
+If your file upload handling allows users to upload files, you are strongly
+advised to check these values. In previous Django versions, if
+:setting:`FILE_UPLOAD_PERMISSIONS` was not set, uploaded files could receive
+inconsistent permissions (``0o600`` or the system umask) depending on the upload
+handler used. The default is now ``0o644`` to ensure consistent behavior. Set
+this to ``None`` to restore the previous behavior.
 
 .. _deployment-checklist-python-options:
 

```